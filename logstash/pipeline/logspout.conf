input {

  # For logspout instance on the elk host
  udp {
    type  => logspout
    port  => 5001
    codec => json
  }

  # For logspout instances on other hosts which are forwarded via ssh
  tcp {
    type  => logspout
    port  => 5001
    codec => json
  }

}


filter {

  mutate {     add_field => { "temp-version" => 10 } }

  if        [docker][image] ==            "docker-elk_logspout" {
    mutate { add_field => {"logspout-source-prog" => "logspout"} }
  } else if [docker][image] ==            "docker-elk_elasticsearch" {
    mutate { add_field => {"logspout-source-prog" => "elasticsearch"} }
  } else if [docker][image] ==            "docker-elk_logstash" {
    mutate { add_field => {"logspout-source-prog" => "logstash"} }
  } else if [docker][image] ==            "docker-elk_kibana" {
    mutate { add_field => {"logspout-source-prog" => "kibana"} }
  } else if [docker][image] ==            "docker-elk_curator" {
    mutate { add_field => {"logspout-source-prog" => "curator"} }
  } else if [docker][image] ==            "docker-elk_cerebro" {
    mutate { add_field => {"logspout-source-prog" => "cerebro"} }
  } else if [docker][image] ==            "docker-elk_portainer" {
    mutate { add_field => {"logspout-source-prog" => "portainer"} }
  } else {
    mutate { add_field => {"logspout-source-prog" => "other"} }
  }

}


output {

  elasticsearch {
    hosts => "elasticsearch:9200"
    index => "logspout-%{+YYYY.MM}"
  }

  # This is to prevent a loop: logstsh logs sth to stdout -> logspout -> logstash -> stdout ...
  if [docker][image] !~ /logstash/ {
    #stdout { codec => rubydebug }
  }

}

