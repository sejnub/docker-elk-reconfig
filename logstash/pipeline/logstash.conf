input {

  udp {
    type  => logspout
    port  => 5000
    codec => json
  }

  tcp {
    type => logstash
    port => 5000
  }

}

## Add your filters / logstash plugins configuration here




filter {

  mutate {     add_field => { "temp-version" => 10 } }

  if [type] == "logspout" {

    if        [docker][image] ==            "docker-elk_logspout" {
      mutate { add_field => {"logspout-source-prog" => "logspout"} }
    } else if [docker][image] ==            "docker-elk_elasticsearch" {
      mutate { add_field => {"logspout-source-prog" => "elasticsearch"} }
    } else if [docker][image] ==            "docker-elk_logstash" {
      mutate { add_field => {"logspout-source-prog" => "logstash"} }
    } else if [docker][image] ==            "docker-elk_kibana" {
      mutate { add_field => {"logspout-source-prog" => "kibana"} }
    } else if [docker][image] ==            "docker-elk_curator" {
      mutate { add_field => {"logspout-source-prog" => "curator"} }
    } else if [docker][image] ==            "docker-elk_cerebro" {
      mutate { add_field => {"logspout-source-prog" => "cerebro"} }
    } else if [docker][image] ==            "docker-elk_portainer" {
      mutate { add_field => {"logspout-source-prog" => "portainer"} }
    } else {
      mutate { add_field => {"logspout-source-prog" => "other"} }
    }

  }


}

output {

    # elasticsearch {
    #   hosts => "elasticsearch:9200"
    # }

  if [type] == "logstash" {

    elasticsearch { hosts => "elasticsearch:9200" }
    #stdout {        codec => rubydebug            }

  } else if [type] == "logspout" {

    elasticsearch {
      hosts => "elasticsearch:9200"
      index => "logspout-%{+YYYY.MM.dd}"
    }

    # This is to prevent a loop: logstsh logs sth to stdout -> logspout -> logstash -> stdout ...
    if [docker][image] !~ /logstash/ {
      #stdout { codec => rubydebug }
    }

  }
}

